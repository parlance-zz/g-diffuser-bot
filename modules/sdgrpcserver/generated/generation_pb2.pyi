"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import tensors_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FinishReason:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FinishReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FinishReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NULL: _FinishReason.ValueType  # 0
    LENGTH: _FinishReason.ValueType  # 1
    STOP: _FinishReason.ValueType  # 2
    ERROR: _FinishReason.ValueType  # 3
    FILTER: _FinishReason.ValueType  # 4

class FinishReason(_FinishReason, metaclass=_FinishReasonEnumTypeWrapper): ...

NULL: FinishReason.ValueType  # 0
LENGTH: FinishReason.ValueType  # 1
STOP: FinishReason.ValueType  # 2
ERROR: FinishReason.ValueType  # 3
FILTER: FinishReason.ValueType  # 4
global___FinishReason = FinishReason

class _ArtifactType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ArtifactTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ArtifactType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ARTIFACT_NONE: _ArtifactType.ValueType  # 0
    ARTIFACT_IMAGE: _ArtifactType.ValueType  # 1
    ARTIFACT_VIDEO: _ArtifactType.ValueType  # 2
    ARTIFACT_TEXT: _ArtifactType.ValueType  # 3
    ARTIFACT_TOKENS: _ArtifactType.ValueType  # 4
    ARTIFACT_EMBEDDING: _ArtifactType.ValueType  # 5
    ARTIFACT_CLASSIFICATIONS: _ArtifactType.ValueType  # 6
    ARTIFACT_MASK: _ArtifactType.ValueType  # 7
    ARTIFACT_LATENT: _ArtifactType.ValueType  # 8
    ARTIFACT_TENSOR: _ArtifactType.ValueType  # 9
    ARTIFACT_LORA: _ArtifactType.ValueType  # 500

class ArtifactType(_ArtifactType, metaclass=_ArtifactTypeEnumTypeWrapper): ...

ARTIFACT_NONE: ArtifactType.ValueType  # 0
ARTIFACT_IMAGE: ArtifactType.ValueType  # 1
ARTIFACT_VIDEO: ArtifactType.ValueType  # 2
ARTIFACT_TEXT: ArtifactType.ValueType  # 3
ARTIFACT_TOKENS: ArtifactType.ValueType  # 4
ARTIFACT_EMBEDDING: ArtifactType.ValueType  # 5
ARTIFACT_CLASSIFICATIONS: ArtifactType.ValueType  # 6
ARTIFACT_MASK: ArtifactType.ValueType  # 7
ARTIFACT_LATENT: ArtifactType.ValueType  # 8
ARTIFACT_TENSOR: ArtifactType.ValueType  # 9
ARTIFACT_LORA: ArtifactType.ValueType  # 500
global___ArtifactType = ArtifactType

class _GaussianDirection:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GaussianDirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GaussianDirection.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DIRECTION_NONE: _GaussianDirection.ValueType  # 0
    DIRECTION_UP: _GaussianDirection.ValueType  # 1
    DIRECTION_DOWN: _GaussianDirection.ValueType  # 2

class GaussianDirection(_GaussianDirection, metaclass=_GaussianDirectionEnumTypeWrapper): ...

DIRECTION_NONE: GaussianDirection.ValueType  # 0
DIRECTION_UP: GaussianDirection.ValueType  # 1
DIRECTION_DOWN: GaussianDirection.ValueType  # 2
global___GaussianDirection = GaussianDirection

class _ChannelSource:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ChannelSourceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ChannelSource.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CHANNEL_R: _ChannelSource.ValueType  # 0
    CHANNEL_G: _ChannelSource.ValueType  # 1
    CHANNEL_B: _ChannelSource.ValueType  # 2
    CHANNEL_A: _ChannelSource.ValueType  # 3
    CHANNEL_ZERO: _ChannelSource.ValueType  # 4
    CHANNEL_ONE: _ChannelSource.ValueType  # 5
    CHANNEL_DISCARD: _ChannelSource.ValueType  # 6

class ChannelSource(_ChannelSource, metaclass=_ChannelSourceEnumTypeWrapper): ...

CHANNEL_R: ChannelSource.ValueType  # 0
CHANNEL_G: ChannelSource.ValueType  # 1
CHANNEL_B: ChannelSource.ValueType  # 2
CHANNEL_A: ChannelSource.ValueType  # 3
CHANNEL_ZERO: ChannelSource.ValueType  # 4
CHANNEL_ONE: ChannelSource.ValueType  # 5
CHANNEL_DISCARD: ChannelSource.ValueType  # 6
global___ChannelSource = ChannelSource

class _RescaleMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RescaleModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RescaleMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RESCALE_STRICT: _RescaleMode.ValueType  # 0
    RESCALE_CROP: _RescaleMode.ValueType  # 2
    RESCALE_FIT: _RescaleMode.ValueType  # 3

class RescaleMode(_RescaleMode, metaclass=_RescaleModeEnumTypeWrapper): ...

RESCALE_STRICT: RescaleMode.ValueType  # 0
RESCALE_CROP: RescaleMode.ValueType  # 2
RESCALE_FIT: RescaleMode.ValueType  # 3
global___RescaleMode = RescaleMode

class _LoraTarget:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _LoraTargetEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoraTarget.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    LORA_UNET: _LoraTarget.ValueType  # 0
    LORA_TEXT_ENCODER: _LoraTarget.ValueType  # 1

class LoraTarget(_LoraTarget, metaclass=_LoraTargetEnumTypeWrapper): ...

LORA_UNET: LoraTarget.ValueType  # 0
LORA_TEXT_ENCODER: LoraTarget.ValueType  # 1
global___LoraTarget = LoraTarget

class _MaskedAreaInit:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _MaskedAreaInitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MaskedAreaInit.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MASKED_AREA_INIT_ZERO: _MaskedAreaInit.ValueType  # 0
    MASKED_AREA_INIT_RANDOM: _MaskedAreaInit.ValueType  # 1
    MASKED_AREA_INIT_ORIGINAL: _MaskedAreaInit.ValueType  # 2

class MaskedAreaInit(_MaskedAreaInit, metaclass=_MaskedAreaInitEnumTypeWrapper): ...

MASKED_AREA_INIT_ZERO: MaskedAreaInit.ValueType  # 0
MASKED_AREA_INIT_RANDOM: MaskedAreaInit.ValueType  # 1
MASKED_AREA_INIT_ORIGINAL: MaskedAreaInit.ValueType  # 2
global___MaskedAreaInit = MaskedAreaInit

class _WeightMethod:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WeightMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WeightMethod.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TEXT_ENCODER: _WeightMethod.ValueType  # 0
    CROSS_ATTENTION: _WeightMethod.ValueType  # 1

class WeightMethod(_WeightMethod, metaclass=_WeightMethodEnumTypeWrapper): ...

TEXT_ENCODER: WeightMethod.ValueType  # 0
CROSS_ATTENTION: WeightMethod.ValueType  # 1
global___WeightMethod = WeightMethod

class _DiffusionSampler:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DiffusionSamplerEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiffusionSampler.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SAMPLER_DDIM: _DiffusionSampler.ValueType  # 0
    SAMPLER_DDPM: _DiffusionSampler.ValueType  # 1
    SAMPLER_K_EULER: _DiffusionSampler.ValueType  # 2
    SAMPLER_K_EULER_ANCESTRAL: _DiffusionSampler.ValueType  # 3
    SAMPLER_K_HEUN: _DiffusionSampler.ValueType  # 4
    SAMPLER_K_DPM_2: _DiffusionSampler.ValueType  # 5
    SAMPLER_K_DPM_2_ANCESTRAL: _DiffusionSampler.ValueType  # 6
    SAMPLER_K_LMS: _DiffusionSampler.ValueType  # 7
    SAMPLER_K_DPMPP_2S_ANCESTRAL: _DiffusionSampler.ValueType  # 8
    SAMPLER_K_DPMPP_2M: _DiffusionSampler.ValueType  # 9
    SAMPLER_K_DPMPP_SDE: _DiffusionSampler.ValueType  # 10
    SAMPLER_DPMSOLVERPP_1ORDER: _DiffusionSampler.ValueType  # 500
    SAMPLER_DPMSOLVERPP_2ORDER: _DiffusionSampler.ValueType  # 501
    SAMPLER_DPMSOLVERPP_3ORDER: _DiffusionSampler.ValueType  # 502
    SAMPLER_DPM_FAST: _DiffusionSampler.ValueType  # 550
    SAMPLER_DPM_ADAPTIVE: _DiffusionSampler.ValueType  # 551
    SAMPLER_DPMSOLVERPP_2S_ANCESTRAL: _DiffusionSampler.ValueType  # 552
    """Deprecated - use the official value above"""
    SAMPLER_DPMSOLVERPP_SDE: _DiffusionSampler.ValueType  # 553
    """Deprecated - use the official value above"""
    SAMPLER_DPMSOLVERPP_2M: _DiffusionSampler.ValueType  # 554
    """Deprecated - use the official value above"""

class DiffusionSampler(_DiffusionSampler, metaclass=_DiffusionSamplerEnumTypeWrapper):
    """DiffusionSampler identifies which sampler to use for Diffusion, and represents
    the internal set of supported samplers.
    """

SAMPLER_DDIM: DiffusionSampler.ValueType  # 0
SAMPLER_DDPM: DiffusionSampler.ValueType  # 1
SAMPLER_K_EULER: DiffusionSampler.ValueType  # 2
SAMPLER_K_EULER_ANCESTRAL: DiffusionSampler.ValueType  # 3
SAMPLER_K_HEUN: DiffusionSampler.ValueType  # 4
SAMPLER_K_DPM_2: DiffusionSampler.ValueType  # 5
SAMPLER_K_DPM_2_ANCESTRAL: DiffusionSampler.ValueType  # 6
SAMPLER_K_LMS: DiffusionSampler.ValueType  # 7
SAMPLER_K_DPMPP_2S_ANCESTRAL: DiffusionSampler.ValueType  # 8
SAMPLER_K_DPMPP_2M: DiffusionSampler.ValueType  # 9
SAMPLER_K_DPMPP_SDE: DiffusionSampler.ValueType  # 10
SAMPLER_DPMSOLVERPP_1ORDER: DiffusionSampler.ValueType  # 500
SAMPLER_DPMSOLVERPP_2ORDER: DiffusionSampler.ValueType  # 501
SAMPLER_DPMSOLVERPP_3ORDER: DiffusionSampler.ValueType  # 502
SAMPLER_DPM_FAST: DiffusionSampler.ValueType  # 550
SAMPLER_DPM_ADAPTIVE: DiffusionSampler.ValueType  # 551
SAMPLER_DPMSOLVERPP_2S_ANCESTRAL: DiffusionSampler.ValueType  # 552
"""Deprecated - use the official value above"""
SAMPLER_DPMSOLVERPP_SDE: DiffusionSampler.ValueType  # 553
"""Deprecated - use the official value above"""
SAMPLER_DPMSOLVERPP_2M: DiffusionSampler.ValueType  # 554
"""Deprecated - use the official value above"""
global___DiffusionSampler = DiffusionSampler

class _SamplerNoiseType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SamplerNoiseTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SamplerNoiseType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SAMPLER_NOISE_NORMAL: _SamplerNoiseType.ValueType  # 0
    SAMPLER_NOISE_BROWNIAN: _SamplerNoiseType.ValueType  # 1

class SamplerNoiseType(_SamplerNoiseType, metaclass=_SamplerNoiseTypeEnumTypeWrapper): ...

SAMPLER_NOISE_NORMAL: SamplerNoiseType.ValueType  # 0
SAMPLER_NOISE_BROWNIAN: SamplerNoiseType.ValueType  # 1
global___SamplerNoiseType = SamplerNoiseType

class _Upscaler:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UpscalerEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Upscaler.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UPSCALER_RGB: _Upscaler.ValueType  # 0
    UPSCALER_GFPGAN: _Upscaler.ValueType  # 1
    UPSCALER_ESRGAN: _Upscaler.ValueType  # 2

class Upscaler(_Upscaler, metaclass=_UpscalerEnumTypeWrapper):
    """Future, unimplemented."""

UPSCALER_RGB: Upscaler.ValueType  # 0
UPSCALER_GFPGAN: Upscaler.ValueType  # 1
UPSCALER_ESRGAN: Upscaler.ValueType  # 2
global___Upscaler = Upscaler

class _GuidancePreset:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GuidancePresetEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GuidancePreset.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    GUIDANCE_PRESET_NONE: _GuidancePreset.ValueType  # 0
    GUIDANCE_PRESET_SIMPLE: _GuidancePreset.ValueType  # 1
    GUIDANCE_PRESET_FAST_BLUE: _GuidancePreset.ValueType  # 2
    GUIDANCE_PRESET_FAST_GREEN: _GuidancePreset.ValueType  # 3
    GUIDANCE_PRESET_SLOW: _GuidancePreset.ValueType  # 4
    GUIDANCE_PRESET_SLOWER: _GuidancePreset.ValueType  # 5
    GUIDANCE_PRESET_SLOWEST: _GuidancePreset.ValueType  # 6

class GuidancePreset(_GuidancePreset, metaclass=_GuidancePresetEnumTypeWrapper):
    """Presets for CLIP guidance."""

GUIDANCE_PRESET_NONE: GuidancePreset.ValueType  # 0
GUIDANCE_PRESET_SIMPLE: GuidancePreset.ValueType  # 1
GUIDANCE_PRESET_FAST_BLUE: GuidancePreset.ValueType  # 2
GUIDANCE_PRESET_FAST_GREEN: GuidancePreset.ValueType  # 3
GUIDANCE_PRESET_SLOW: GuidancePreset.ValueType  # 4
GUIDANCE_PRESET_SLOWER: GuidancePreset.ValueType  # 5
GUIDANCE_PRESET_SLOWEST: GuidancePreset.ValueType  # 6
global___GuidancePreset = GuidancePreset

class _ModelArchitecture:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ModelArchitectureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ModelArchitecture.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MODEL_ARCHITECTURE_NONE: _ModelArchitecture.ValueType  # 0
    MODEL_ARCHITECTURE_CLIP_VIT: _ModelArchitecture.ValueType  # 1
    MODEL_ARCHITECTURE_CLIP_RESNET: _ModelArchitecture.ValueType  # 2
    MODEL_ARCHITECTURE_LDM: _ModelArchitecture.ValueType  # 3

class ModelArchitecture(_ModelArchitecture, metaclass=_ModelArchitectureEnumTypeWrapper): ...

MODEL_ARCHITECTURE_NONE: ModelArchitecture.ValueType  # 0
MODEL_ARCHITECTURE_CLIP_VIT: ModelArchitecture.ValueType  # 1
MODEL_ARCHITECTURE_CLIP_RESNET: ModelArchitecture.ValueType  # 2
MODEL_ARCHITECTURE_LDM: ModelArchitecture.ValueType  # 3
global___ModelArchitecture = ModelArchitecture

class _Action:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACTION_PASSTHROUGH: _Action.ValueType  # 0
    ACTION_REGENERATE_DUPLICATE: _Action.ValueType  # 1
    ACTION_REGENERATE: _Action.ValueType  # 2
    ACTION_OBFUSCATE_DUPLICATE: _Action.ValueType  # 3
    ACTION_OBFUSCATE: _Action.ValueType  # 4
    ACTION_DISCARD: _Action.ValueType  # 5

class Action(_Action, metaclass=_ActionEnumTypeWrapper): ...

ACTION_PASSTHROUGH: Action.ValueType  # 0
ACTION_REGENERATE_DUPLICATE: Action.ValueType  # 1
ACTION_REGENERATE: Action.ValueType  # 2
ACTION_OBFUSCATE_DUPLICATE: Action.ValueType  # 3
ACTION_OBFUSCATE: Action.ValueType  # 4
ACTION_DISCARD: Action.ValueType  # 5
global___Action = Action

class _ClassifierMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ClassifierModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ClassifierMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CLSFR_MODE_ZEROSHOT: _ClassifierMode.ValueType  # 0
    CLSFR_MODE_MULTICLASS: _ClassifierMode.ValueType  # 1
    """CLSFR_MODE_ODDSRATIO = 2;"""

class ClassifierMode(_ClassifierMode, metaclass=_ClassifierModeEnumTypeWrapper):
    """
    Artifact classification parameters.

    Classifier Mode.
    """

CLSFR_MODE_ZEROSHOT: ClassifierMode.ValueType  # 0
CLSFR_MODE_MULTICLASS: ClassifierMode.ValueType  # 1
"""CLSFR_MODE_ODDSRATIO = 2;"""
global___ClassifierMode = ClassifierMode

class _AssetAction:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetAction.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSET_PUT: _AssetAction.ValueType  # 0
    ASSET_GET: _AssetAction.ValueType  # 1
    ASSET_DELETE: _AssetAction.ValueType  # 2

class AssetAction(_AssetAction, metaclass=_AssetActionEnumTypeWrapper):
    """
    Asset parameters
    """

ASSET_PUT: AssetAction.ValueType  # 0
ASSET_GET: AssetAction.ValueType  # 1
ASSET_DELETE: AssetAction.ValueType  # 2
global___AssetAction = AssetAction

class _AssetUse:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetUseEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetUse.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSET_USE_UNDEFINED: _AssetUse.ValueType  # 0
    """Asset does not have use defined"""
    ASSET_USE_INPUT: _AssetUse.ValueType  # 1
    """Asset is used as an input for the project"""
    ASSET_USE_OUTPUT: _AssetUse.ValueType  # 2
    """Asset is an output from the project"""
    ASSET_USE_INTERMEDIATE: _AssetUse.ValueType  # 3
    """Asset is an output from an intermediate step of the project"""
    ASSET_USE_PROJECT: _AssetUse.ValueType  # 4
    """Asset is used as the project file for the project"""

class AssetUse(_AssetUse, metaclass=_AssetUseEnumTypeWrapper):
    """AssetUse defines how the asset is used within a project.  This enum matches
    the values the project proto.
    """

ASSET_USE_UNDEFINED: AssetUse.ValueType  # 0
"""Asset does not have use defined"""
ASSET_USE_INPUT: AssetUse.ValueType  # 1
"""Asset is used as an input for the project"""
ASSET_USE_OUTPUT: AssetUse.ValueType  # 2
"""Asset is an output from the project"""
ASSET_USE_INTERMEDIATE: AssetUse.ValueType  # 3
"""Asset is an output from an intermediate step of the project"""
ASSET_USE_PROJECT: AssetUse.ValueType  # 4
"""Asset is used as the project file for the project"""
global___AssetUse = AssetUse

class _StageAction:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StageActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StageAction.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STAGE_ACTION_PASS: _StageAction.ValueType  # 0
    STAGE_ACTION_DISCARD: _StageAction.ValueType  # 1
    STAGE_ACTION_RETURN: _StageAction.ValueType  # 2

class StageAction(_StageAction, metaclass=_StageActionEnumTypeWrapper):
    """
    Stages

    A Stage is a single step in a pipeline. Stages are a set of Requests, which are
    sent to the server, and a set of Answers, which are received from the server.
    """

STAGE_ACTION_PASS: StageAction.ValueType  # 0
STAGE_ACTION_DISCARD: StageAction.ValueType  # 1
STAGE_ACTION_RETURN: StageAction.ValueType  # 2
global___StageAction = StageAction

@typing_extensions.final
class Token(google.protobuf.message.Message):
    """Generally, a GPT BPE 16-bit token, paired with an optional string representation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    text: builtins.str
    id: builtins.int
    def __init__(
        self,
        *,
        text: builtins.str | None = ...,
        id: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_text", b"_text", "text", b"text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_text", b"_text", "id", b"id", "text", b"text"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_text", b"_text"]) -> typing_extensions.Literal["text"] | None: ...

global___Token = Token

@typing_extensions.final
class Tokens(google.protobuf.message.Message):
    """Sequence of tokens, paired with the id of the tokenizer used to generate them."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKENS_FIELD_NUMBER: builtins.int
    TOKENIZER_ID_FIELD_NUMBER: builtins.int
    @property
    def tokens(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Token]: ...
    tokenizer_id: builtins.str
    def __init__(
        self,
        *,
        tokens: collections.abc.Iterable[global___Token] | None = ...,
        tokenizer_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_tokenizer_id", b"_tokenizer_id", "tokenizer_id", b"tokenizer_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_tokenizer_id", b"_tokenizer_id", "tokenizer_id", b"tokenizer_id", "tokens", b"tokens"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tokenizer_id", b"_tokenizer_id"]) -> typing_extensions.Literal["tokenizer_id"] | None: ...

global___Tokens = Tokens

@typing_extensions.final
class ImageAdjustment_Gaussian(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIGMA_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    sigma: builtins.float
    direction: global___GaussianDirection.ValueType
    def __init__(
        self,
        *,
        sigma: builtins.float = ...,
        direction: global___GaussianDirection.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "sigma", b"sigma"]) -> None: ...

global___ImageAdjustment_Gaussian = ImageAdjustment_Gaussian

@typing_extensions.final
class ImageAdjustment_Invert(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ImageAdjustment_Invert = ImageAdjustment_Invert

@typing_extensions.final
class ImageAdjustment_Levels(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INPUT_LOW_FIELD_NUMBER: builtins.int
    INPUT_HIGH_FIELD_NUMBER: builtins.int
    OUTPUT_LOW_FIELD_NUMBER: builtins.int
    OUTPUT_HIGH_FIELD_NUMBER: builtins.int
    input_low: builtins.float
    input_high: builtins.float
    output_low: builtins.float
    output_high: builtins.float
    def __init__(
        self,
        *,
        input_low: builtins.float = ...,
        input_high: builtins.float = ...,
        output_low: builtins.float = ...,
        output_high: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_high", b"input_high", "input_low", b"input_low", "output_high", b"output_high", "output_low", b"output_low"]) -> None: ...

global___ImageAdjustment_Levels = ImageAdjustment_Levels

@typing_extensions.final
class ImageAdjustment_Channels(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    R_FIELD_NUMBER: builtins.int
    G_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    A_FIELD_NUMBER: builtins.int
    r: global___ChannelSource.ValueType
    g: global___ChannelSource.ValueType
    b: global___ChannelSource.ValueType
    a: global___ChannelSource.ValueType
    def __init__(
        self,
        *,
        r: global___ChannelSource.ValueType | None = ...,
        g: global___ChannelSource.ValueType | None = ...,
        b: global___ChannelSource.ValueType | None = ...,
        a: global___ChannelSource.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_a", b"_a", "_b", b"_b", "_g", b"_g", "_r", b"_r", "a", b"a", "b", b"b", "g", b"g", "r", b"r"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_a", b"_a", "_b", b"_b", "_g", b"_g", "_r", b"_r", "a", b"a", "b", b"b", "g", b"g", "r", b"r"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_a", b"_a"]) -> typing_extensions.Literal["a"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_b", b"_b"]) -> typing_extensions.Literal["b"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_g", b"_g"]) -> typing_extensions.Literal["g"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_r", b"_r"]) -> typing_extensions.Literal["r"] | None: ...

global___ImageAdjustment_Channels = ImageAdjustment_Channels

@typing_extensions.final
class ImageAdjustment_Rescale(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEIGHT_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    ALGORITHM_HINT_FIELD_NUMBER: builtins.int
    height: builtins.int
    width: builtins.int
    mode: global___RescaleMode.ValueType
    @property
    def algorithm_hint(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        height: builtins.int = ...,
        width: builtins.int = ...,
        mode: global___RescaleMode.ValueType = ...,
        algorithm_hint: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm_hint", b"algorithm_hint", "height", b"height", "mode", b"mode", "width", b"width"]) -> None: ...

global___ImageAdjustment_Rescale = ImageAdjustment_Rescale

@typing_extensions.final
class ImageAdjustment_Crop(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOP_FIELD_NUMBER: builtins.int
    LEFT_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    top: builtins.int
    left: builtins.int
    width: builtins.int
    height: builtins.int
    def __init__(
        self,
        *,
        top: builtins.int = ...,
        left: builtins.int = ...,
        width: builtins.int = ...,
        height: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["height", b"height", "left", b"left", "top", b"top", "width", b"width"]) -> None: ...

global___ImageAdjustment_Crop = ImageAdjustment_Crop

@typing_extensions.final
class ImageAdjustment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLUR_FIELD_NUMBER: builtins.int
    INVERT_FIELD_NUMBER: builtins.int
    LEVELS_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    RESCALE_FIELD_NUMBER: builtins.int
    CROP_FIELD_NUMBER: builtins.int
    @property
    def blur(self) -> global___ImageAdjustment_Gaussian: ...
    @property
    def invert(self) -> global___ImageAdjustment_Invert: ...
    @property
    def levels(self) -> global___ImageAdjustment_Levels: ...
    @property
    def channels(self) -> global___ImageAdjustment_Channels: ...
    @property
    def rescale(self) -> global___ImageAdjustment_Rescale: ...
    @property
    def crop(self) -> global___ImageAdjustment_Crop: ...
    def __init__(
        self,
        *,
        blur: global___ImageAdjustment_Gaussian | None = ...,
        invert: global___ImageAdjustment_Invert | None = ...,
        levels: global___ImageAdjustment_Levels | None = ...,
        channels: global___ImageAdjustment_Channels | None = ...,
        rescale: global___ImageAdjustment_Rescale | None = ...,
        crop: global___ImageAdjustment_Crop | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["adjustment", b"adjustment", "blur", b"blur", "channels", b"channels", "crop", b"crop", "invert", b"invert", "levels", b"levels", "rescale", b"rescale"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["adjustment", b"adjustment", "blur", b"blur", "channels", b"channels", "crop", b"crop", "invert", b"invert", "levels", b"levels", "rescale", b"rescale"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["adjustment", b"adjustment"]) -> typing_extensions.Literal["blur", "invert", "levels", "channels", "rescale", "crop"] | None: ...

global___ImageAdjustment = ImageAdjustment

@typing_extensions.final
class Lora(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_FIELD_NUMBER: builtins.int
    TENSORS_FIELD_NUMBER: builtins.int
    target: global___LoraTarget.ValueType
    @property
    def tensors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensors_pb2.Tensor]: ...
    def __init__(
        self,
        *,
        target: global___LoraTarget.ValueType = ...,
        tensors: collections.abc.Iterable[tensors_pb2.Tensor] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target", b"target", "tensors", b"tensors"]) -> None: ...

global___Lora = Lora

@typing_extensions.final
class Artifact(google.protobuf.message.Message):
    """A tangible Artifact, such as an image, video, or text that is used for input
    or output.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MIME_FIELD_NUMBER: builtins.int
    MAGIC_FIELD_NUMBER: builtins.int
    BINARY_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    CLASSIFIER_FIELD_NUMBER: builtins.int
    TENSOR_FIELD_NUMBER: builtins.int
    LORA_FIELD_NUMBER: builtins.int
    INDEX_FIELD_NUMBER: builtins.int
    FINISH_REASON_FIELD_NUMBER: builtins.int
    SEED_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    ADJUSTMENTS_FIELD_NUMBER: builtins.int
    POSTADJUSTMENTS_FIELD_NUMBER: builtins.int
    id: builtins.int
    type: global___ArtifactType.ValueType
    mime: builtins.str
    """MIME type identifier, e.g. "image/png" """
    magic: builtins.str
    """Magic number, e.g. "PNG" """
    binary: builtins.bytes
    """Binary data, e.g. PNG image"""
    text: builtins.str
    """Text data, e.g. text prompt"""
    @property
    def tokens(self) -> global___Tokens:
        """Tokenized text data, e.g. GPT tokens"""
    @property
    def classifier(self) -> global___ClassifierParameters: ...
    @property
    def tensor(self) -> tensors_pb2.Tensor:
        """torch.Tensor:"""
    @property
    def lora(self) -> global___Lora:
        """   RGB tensor (C,H,W)
           VAE latent (C,H//8,W//8, assuming VAE-f8)
        A Lora embedding
        """
    index: builtins.int
    """Index of this artifact in input/output list"""
    finish_reason: global___FinishReason.ValueType
    """Reason for finishing, if applicable"""
    seed: builtins.int
    """Seed used to generate this artifact"""
    uuid: builtins.str
    """UUIDv4 of the artifact, used for asset lookup"""
    size: builtins.int
    """Size of the artifact in bytes"""
    @property
    def adjustments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageAdjustment]:
        """Adjustments to this image / mask before generation"""
    @property
    def postAdjustments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageAdjustment]:
        """Adjustments to this image / mask after generation"""
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        type: global___ArtifactType.ValueType = ...,
        mime: builtins.str = ...,
        magic: builtins.str | None = ...,
        binary: builtins.bytes = ...,
        text: builtins.str = ...,
        tokens: global___Tokens | None = ...,
        classifier: global___ClassifierParameters | None = ...,
        tensor: tensors_pb2.Tensor | None = ...,
        lora: global___Lora | None = ...,
        index: builtins.int = ...,
        finish_reason: global___FinishReason.ValueType = ...,
        seed: builtins.int = ...,
        uuid: builtins.str = ...,
        size: builtins.int = ...,
        adjustments: collections.abc.Iterable[global___ImageAdjustment] | None = ...,
        postAdjustments: collections.abc.Iterable[global___ImageAdjustment] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_magic", b"_magic", "binary", b"binary", "classifier", b"classifier", "data", b"data", "lora", b"lora", "magic", b"magic", "tensor", b"tensor", "text", b"text", "tokens", b"tokens"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_magic", b"_magic", "adjustments", b"adjustments", "binary", b"binary", "classifier", b"classifier", "data", b"data", "finish_reason", b"finish_reason", "id", b"id", "index", b"index", "lora", b"lora", "magic", b"magic", "mime", b"mime", "postAdjustments", b"postAdjustments", "seed", b"seed", "size", b"size", "tensor", b"tensor", "text", b"text", "tokens", b"tokens", "type", b"type", "uuid", b"uuid"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_magic", b"_magic"]) -> typing_extensions.Literal["magic"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["binary", "text", "tokens", "classifier", "tensor", "lora"] | None: ...

global___Artifact = Artifact

@typing_extensions.final
class PromptParameters(google.protobuf.message.Message):
    """A set of parameters for each individual Prompt."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INIT_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    init: builtins.bool
    weight: builtins.float
    def __init__(
        self,
        *,
        init: builtins.bool | None = ...,
        weight: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_init", b"_init", "_weight", b"_weight", "init", b"init", "weight", b"weight"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_init", b"_init", "_weight", b"_weight", "init", b"init", "weight", b"weight"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_init", b"_init"]) -> typing_extensions.Literal["init"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weight", b"_weight"]) -> typing_extensions.Literal["weight"] | None: ...

global___PromptParameters = PromptParameters

@typing_extensions.final
class Prompt(google.protobuf.message.Message):
    """A Prompt is a special type of Artifact that is used to generate an output.
    There can be multiple Prompts that affect the same output. Currently, the
    only Prompts supported are:
      - Text (singular)
      - Init Image (singular, optional, type ARTIFACT_IMAGE, with init=true)
      - Mask (singular, optional, Artifact type ARTIFACT_MASK)
    .
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARAMETERS_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    ARTIFACT_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> global___PromptParameters: ...
    text: builtins.str
    @property
    def tokens(self) -> global___Tokens: ...
    @property
    def artifact(self) -> global___Artifact: ...
    def __init__(
        self,
        *,
        parameters: global___PromptParameters | None = ...,
        text: builtins.str = ...,
        tokens: global___Tokens | None = ...,
        artifact: global___Artifact | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_parameters", b"_parameters", "artifact", b"artifact", "parameters", b"parameters", "prompt", b"prompt", "text", b"text", "tokens", b"tokens"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_parameters", b"_parameters", "artifact", b"artifact", "parameters", b"parameters", "prompt", b"prompt", "text", b"text", "tokens", b"tokens"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parameters", b"_parameters"]) -> typing_extensions.Literal["parameters"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["prompt", b"prompt"]) -> typing_extensions.Literal["text", "tokens", "artifact"] | None: ...

global___Prompt = Prompt

@typing_extensions.final
class SigmaParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIGMA_MIN_FIELD_NUMBER: builtins.int
    SIGMA_MAX_FIELD_NUMBER: builtins.int
    KARRAS_RHO_FIELD_NUMBER: builtins.int
    sigma_min: builtins.float
    sigma_max: builtins.float
    karras_rho: builtins.float
    def __init__(
        self,
        *,
        sigma_min: builtins.float | None = ...,
        sigma_max: builtins.float | None = ...,
        karras_rho: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_karras_rho", b"_karras_rho", "_sigma_max", b"_sigma_max", "_sigma_min", b"_sigma_min", "karras_rho", b"karras_rho", "sigma_max", b"sigma_max", "sigma_min", b"sigma_min"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_karras_rho", b"_karras_rho", "_sigma_max", b"_sigma_max", "_sigma_min", b"_sigma_min", "karras_rho", b"karras_rho", "sigma_max", b"sigma_max", "sigma_min", b"sigma_min"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_karras_rho", b"_karras_rho"]) -> typing_extensions.Literal["karras_rho"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sigma_max", b"_sigma_max"]) -> typing_extensions.Literal["sigma_max"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sigma_min", b"_sigma_min"]) -> typing_extensions.Literal["sigma_min"] | None: ...

global___SigmaParameters = SigmaParameters

@typing_extensions.final
class ChurnSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHURN_FIELD_NUMBER: builtins.int
    CHURN_TMIN_FIELD_NUMBER: builtins.int
    CHURN_TMAX_FIELD_NUMBER: builtins.int
    churn: builtins.float
    churn_tmin: builtins.float
    churn_tmax: builtins.float
    def __init__(
        self,
        *,
        churn: builtins.float = ...,
        churn_tmin: builtins.float | None = ...,
        churn_tmax: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_churn_tmax", b"_churn_tmax", "_churn_tmin", b"_churn_tmin", "churn_tmax", b"churn_tmax", "churn_tmin", b"churn_tmin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_churn_tmax", b"_churn_tmax", "_churn_tmin", b"_churn_tmin", "churn", b"churn", "churn_tmax", b"churn_tmax", "churn_tmin", b"churn_tmin"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_churn_tmax", b"_churn_tmax"]) -> typing_extensions.Literal["churn_tmax"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_churn_tmin", b"_churn_tmin"]) -> typing_extensions.Literal["churn_tmin"] | None: ...

global___ChurnSettings = ChurnSettings

@typing_extensions.final
class SamplerParameters(google.protobuf.message.Message):
    """Parameters that affect the behavior of the sampler, typically used for CFG."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETA_FIELD_NUMBER: builtins.int
    SAMPLING_STEPS_FIELD_NUMBER: builtins.int
    LATENT_CHANNELS_FIELD_NUMBER: builtins.int
    DOWNSAMPLING_FACTOR_FIELD_NUMBER: builtins.int
    CFG_SCALE_FIELD_NUMBER: builtins.int
    INIT_NOISE_SCALE_FIELD_NUMBER: builtins.int
    STEP_NOISE_SCALE_FIELD_NUMBER: builtins.int
    CHURN_FIELD_NUMBER: builtins.int
    SIGMA_FIELD_NUMBER: builtins.int
    NOISE_TYPE_FIELD_NUMBER: builtins.int
    eta: builtins.float
    sampling_steps: builtins.int
    latent_channels: builtins.int
    downsampling_factor: builtins.int
    cfg_scale: builtins.float
    init_noise_scale: builtins.float
    """defaults to 0.99"""
    step_noise_scale: builtins.float
    """defaults to 0.99"""
    @property
    def churn(self) -> global___ChurnSettings: ...
    @property
    def sigma(self) -> global___SigmaParameters: ...
    noise_type: global___SamplerNoiseType.ValueType
    def __init__(
        self,
        *,
        eta: builtins.float | None = ...,
        sampling_steps: builtins.int | None = ...,
        latent_channels: builtins.int | None = ...,
        downsampling_factor: builtins.int | None = ...,
        cfg_scale: builtins.float | None = ...,
        init_noise_scale: builtins.float | None = ...,
        step_noise_scale: builtins.float | None = ...,
        churn: global___ChurnSettings | None = ...,
        sigma: global___SigmaParameters | None = ...,
        noise_type: global___SamplerNoiseType.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cfg_scale", b"_cfg_scale", "_churn", b"_churn", "_downsampling_factor", b"_downsampling_factor", "_eta", b"_eta", "_init_noise_scale", b"_init_noise_scale", "_latent_channels", b"_latent_channels", "_noise_type", b"_noise_type", "_sampling_steps", b"_sampling_steps", "_sigma", b"_sigma", "_step_noise_scale", b"_step_noise_scale", "cfg_scale", b"cfg_scale", "churn", b"churn", "downsampling_factor", b"downsampling_factor", "eta", b"eta", "init_noise_scale", b"init_noise_scale", "latent_channels", b"latent_channels", "noise_type", b"noise_type", "sampling_steps", b"sampling_steps", "sigma", b"sigma", "step_noise_scale", b"step_noise_scale"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cfg_scale", b"_cfg_scale", "_churn", b"_churn", "_downsampling_factor", b"_downsampling_factor", "_eta", b"_eta", "_init_noise_scale", b"_init_noise_scale", "_latent_channels", b"_latent_channels", "_noise_type", b"_noise_type", "_sampling_steps", b"_sampling_steps", "_sigma", b"_sigma", "_step_noise_scale", b"_step_noise_scale", "cfg_scale", b"cfg_scale", "churn", b"churn", "downsampling_factor", b"downsampling_factor", "eta", b"eta", "init_noise_scale", b"init_noise_scale", "latent_channels", b"latent_channels", "noise_type", b"noise_type", "sampling_steps", b"sampling_steps", "sigma", b"sigma", "step_noise_scale", b"step_noise_scale"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cfg_scale", b"_cfg_scale"]) -> typing_extensions.Literal["cfg_scale"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_churn", b"_churn"]) -> typing_extensions.Literal["churn"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_downsampling_factor", b"_downsampling_factor"]) -> typing_extensions.Literal["downsampling_factor"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_eta", b"_eta"]) -> typing_extensions.Literal["eta"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_init_noise_scale", b"_init_noise_scale"]) -> typing_extensions.Literal["init_noise_scale"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_latent_channels", b"_latent_channels"]) -> typing_extensions.Literal["latent_channels"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_noise_type", b"_noise_type"]) -> typing_extensions.Literal["noise_type"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sampling_steps", b"_sampling_steps"]) -> typing_extensions.Literal["sampling_steps"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sigma", b"_sigma"]) -> typing_extensions.Literal["sigma"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_step_noise_scale", b"_step_noise_scale"]) -> typing_extensions.Literal["step_noise_scale"] | None: ...

global___SamplerParameters = SamplerParameters

@typing_extensions.final
class ConditionerParameters(google.protobuf.message.Message):
    """Unused, but reserved for future use. Adjustments to the latents after
    initialization.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VECTOR_ADJUST_PRIOR_FIELD_NUMBER: builtins.int
    CONDITIONER_FIELD_NUMBER: builtins.int
    vector_adjust_prior: builtins.str
    @property
    def conditioner(self) -> global___Model: ...
    def __init__(
        self,
        *,
        vector_adjust_prior: builtins.str | None = ...,
        conditioner: global___Model | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_conditioner", b"_conditioner", "_vector_adjust_prior", b"_vector_adjust_prior", "conditioner", b"conditioner", "vector_adjust_prior", b"vector_adjust_prior"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_conditioner", b"_conditioner", "_vector_adjust_prior", b"_vector_adjust_prior", "conditioner", b"conditioner", "vector_adjust_prior", b"vector_adjust_prior"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conditioner", b"_conditioner"]) -> typing_extensions.Literal["conditioner"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vector_adjust_prior", b"_vector_adjust_prior"]) -> typing_extensions.Literal["vector_adjust_prior"] | None: ...

global___ConditionerParameters = ConditionerParameters

@typing_extensions.final
class ScheduleParameters(google.protobuf.message.Message):
    """When does this schedule definition apply?."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    start: builtins.float
    """0.0 to 1.0"""
    end: builtins.float
    """0.0 to 1.0"""
    value: builtins.float
    """float value to apply on this schedule"""
    def __init__(
        self,
        *,
        start: builtins.float | None = ...,
        end: builtins.float | None = ...,
        value: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_end", b"_end", "_start", b"_start", "_value", b"_value", "end", b"end", "start", b"start", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_end", b"_end", "_start", b"_start", "_value", b"_value", "end", b"end", "start", b"start", "value", b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end", b"_end"]) -> typing_extensions.Literal["end"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start", b"_start"]) -> typing_extensions.Literal["start"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

global___ScheduleParameters = ScheduleParameters

@typing_extensions.final
class StepParameter(google.protobuf.message.Message):
    """Parameters that apply to this block of the schedule."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCALED_STEP_FIELD_NUMBER: builtins.int
    SAMPLER_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    GUIDANCE_FIELD_NUMBER: builtins.int
    scaled_step: builtins.float
    @property
    def sampler(self) -> global___SamplerParameters: ...
    @property
    def schedule(self) -> global___ScheduleParameters: ...
    @property
    def guidance(self) -> global___GuidanceParameters: ...
    def __init__(
        self,
        *,
        scaled_step: builtins.float = ...,
        sampler: global___SamplerParameters | None = ...,
        schedule: global___ScheduleParameters | None = ...,
        guidance: global___GuidanceParameters | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_guidance", b"_guidance", "_sampler", b"_sampler", "_schedule", b"_schedule", "guidance", b"guidance", "sampler", b"sampler", "schedule", b"schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_guidance", b"_guidance", "_sampler", b"_sampler", "_schedule", b"_schedule", "guidance", b"guidance", "sampler", b"sampler", "scaled_step", b"scaled_step", "schedule", b"schedule"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guidance", b"_guidance"]) -> typing_extensions.Literal["guidance"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sampler", b"_sampler"]) -> typing_extensions.Literal["sampler"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_schedule", b"_schedule"]) -> typing_extensions.Literal["schedule"] | None: ...

global___StepParameter = StepParameter

@typing_extensions.final
class Model(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARCHITECTURE_FIELD_NUMBER: builtins.int
    PUBLISHER_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    SEMANTIC_VERSION_FIELD_NUMBER: builtins.int
    ALIAS_FIELD_NUMBER: builtins.int
    architecture: global___ModelArchitecture.ValueType
    publisher: builtins.str
    dataset: builtins.str
    version: builtins.float
    semantic_version: builtins.str
    alias: builtins.str
    def __init__(
        self,
        *,
        architecture: global___ModelArchitecture.ValueType = ...,
        publisher: builtins.str = ...,
        dataset: builtins.str = ...,
        version: builtins.float = ...,
        semantic_version: builtins.str = ...,
        alias: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias", b"alias", "architecture", b"architecture", "dataset", b"dataset", "publisher", b"publisher", "semantic_version", b"semantic_version", "version", b"version"]) -> None: ...

global___Model = Model

@typing_extensions.final
class CutoutParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CUTOUTS_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    GRAY_FIELD_NUMBER: builtins.int
    BLUR_FIELD_NUMBER: builtins.int
    SIZE_POWER_FIELD_NUMBER: builtins.int
    @property
    def cutouts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CutoutParameters]:
        """Nested cutouts, unsupported"""
    count: builtins.int
    """0 to n, usually 8 to 32, 0 inner"""
    gray: builtins.float
    """0.0 to 1.0, defaults to 0.2"""
    blur: builtins.float
    """percentage of cutouts to blur"""
    size_power: builtins.float
    """defaults to inner: 0.5, outer: 0.0"""
    def __init__(
        self,
        *,
        cutouts: collections.abc.Iterable[global___CutoutParameters] | None = ...,
        count: builtins.int | None = ...,
        gray: builtins.float | None = ...,
        blur: builtins.float | None = ...,
        size_power: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_blur", b"_blur", "_count", b"_count", "_gray", b"_gray", "_size_power", b"_size_power", "blur", b"blur", "count", b"count", "gray", b"gray", "size_power", b"size_power"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_blur", b"_blur", "_count", b"_count", "_gray", b"_gray", "_size_power", b"_size_power", "blur", b"blur", "count", b"count", "cutouts", b"cutouts", "gray", b"gray", "size_power", b"size_power"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_blur", b"_blur"]) -> typing_extensions.Literal["blur"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_count", b"_count"]) -> typing_extensions.Literal["count"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gray", b"_gray"]) -> typing_extensions.Literal["gray"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size_power", b"_size_power"]) -> typing_extensions.Literal["size_power"] | None: ...

global___CutoutParameters = CutoutParameters

@typing_extensions.final
class GuidanceScheduleParameters(google.protobuf.message.Message):
    """GuidanceScheduleParameters are used to define a schedule for CLIP guidance, and
    are used to define the behavior of the guidance over time. They are relative
    to the total number of steps, and are scaled to the number of steps in the
    current run.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DURATION_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    duration: builtins.float
    value: builtins.float
    def __init__(
        self,
        *,
        duration: builtins.float = ...,
        value: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration", b"duration", "value", b"value"]) -> None: ...

global___GuidanceScheduleParameters = GuidanceScheduleParameters

@typing_extensions.final
class GuidanceInstanceParameters(google.protobuf.message.Message):
    """Parameters that affect the behavior of the guidance, typically used for CLIP.
    We can specify more than one model, and the guidance will be a weighted sum
    of the models.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODELS_FIELD_NUMBER: builtins.int
    GUIDANCE_STRENGTH_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    CUTOUTS_FIELD_NUMBER: builtins.int
    PROMPT_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]:
        """models to use for this set"""
    guidance_strength: builtins.float
    """0.0 to 1.0, usually 0.05 to 0.225"""
    @property
    def schedule(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuidanceScheduleParameters]:
        """when to apply guidance"""
    @property
    def cutouts(self) -> global___CutoutParameters:
        """cutout parameters"""
    @property
    def prompt(self) -> global___Prompt:
        """prompt to use for guidance"""
    def __init__(
        self,
        *,
        models: collections.abc.Iterable[global___Model] | None = ...,
        guidance_strength: builtins.float | None = ...,
        schedule: collections.abc.Iterable[global___GuidanceScheduleParameters] | None = ...,
        cutouts: global___CutoutParameters | None = ...,
        prompt: global___Prompt | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cutouts", b"_cutouts", "_guidance_strength", b"_guidance_strength", "_prompt", b"_prompt", "cutouts", b"cutouts", "guidance_strength", b"guidance_strength", "prompt", b"prompt"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cutouts", b"_cutouts", "_guidance_strength", b"_guidance_strength", "_prompt", b"_prompt", "cutouts", b"cutouts", "guidance_strength", b"guidance_strength", "models", b"models", "prompt", b"prompt", "schedule", b"schedule"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cutouts", b"_cutouts"]) -> typing_extensions.Literal["cutouts"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guidance_strength", b"_guidance_strength"]) -> typing_extensions.Literal["guidance_strength"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_prompt", b"_prompt"]) -> typing_extensions.Literal["prompt"] | None: ...

global___GuidanceInstanceParameters = GuidanceInstanceParameters

@typing_extensions.final
class GuidanceParameters(google.protobuf.message.Message):
    """Parameters that affect the behavior of the guidance, typically used for CLIP.
    The omission of this field implies the default guidance of CFG.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GUIDANCE_PRESET_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    guidance_preset: global___GuidancePreset.ValueType
    """base preset for guidance"""
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuidanceInstanceParameters]:
        """guidance instances"""
    def __init__(
        self,
        *,
        guidance_preset: global___GuidancePreset.ValueType = ...,
        instances: collections.abc.Iterable[global___GuidanceInstanceParameters] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guidance_preset", b"guidance_preset", "instances", b"instances"]) -> None: ...

global___GuidanceParameters = GuidanceParameters

@typing_extensions.final
class TransformType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIFFUSION_FIELD_NUMBER: builtins.int
    UPSCALER_FIELD_NUMBER: builtins.int
    diffusion: global___DiffusionSampler.ValueType
    upscaler: global___Upscaler.ValueType
    def __init__(
        self,
        *,
        diffusion: global___DiffusionSampler.ValueType = ...,
        upscaler: global___Upscaler.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["diffusion", b"diffusion", "type", b"type", "upscaler", b"upscaler"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["diffusion", b"diffusion", "type", b"type", "upscaler", b"upscaler"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["diffusion", "upscaler"] | None: ...

global___TransformType = TransformType

@typing_extensions.final
class ExtendedParameter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    FLOAT_FIELD_NUMBER: builtins.int
    INT_FIELD_NUMBER: builtins.int
    STR_FIELD_NUMBER: builtins.int
    name: builtins.str
    float: builtins.float
    int: builtins.int
    str: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        float: builtins.float = ...,
        int: builtins.int = ...,
        str: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["float", b"float", "int", b"int", "str", b"str", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["float", b"float", "int", b"int", "name", b"name", "str", b"str", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["float", "int", "str"] | None: ...

global___ExtendedParameter = ExtendedParameter

@typing_extensions.final
class ExtendedParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARAMETERS_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExtendedParameter]: ...
    def __init__(
        self,
        *,
        parameters: collections.abc.Iterable[global___ExtendedParameter] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parameters", b"parameters"]) -> None: ...

global___ExtendedParameters = ExtendedParameters

@typing_extensions.final
class HiresFixParameters(google.protobuf.message.Message):
    """Parameters that control the hires fix feature."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_FIELD_NUMBER: builtins.int
    OOS_FRACTION_FIELD_NUMBER: builtins.int
    enable: builtins.bool
    """Should it be enabled at all"""
    oos_fraction: builtins.float
    """How out-of-square will we allow the fixed area to be, 0...1"""
    def __init__(
        self,
        *,
        enable: builtins.bool = ...,
        oos_fraction: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_oos_fraction", b"_oos_fraction", "oos_fraction", b"oos_fraction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_oos_fraction", b"_oos_fraction", "enable", b"enable", "oos_fraction", b"oos_fraction"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_oos_fraction", b"_oos_fraction"]) -> typing_extensions.Literal["oos_fraction"] | None: ...

global___HiresFixParameters = HiresFixParameters

@typing_extensions.final
class ImageParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEIGHT_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    SEED_FIELD_NUMBER: builtins.int
    SAMPLES_FIELD_NUMBER: builtins.int
    STEPS_FIELD_NUMBER: builtins.int
    TRANSFORM_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    MASKED_AREA_INIT_FIELD_NUMBER: builtins.int
    WEIGHT_METHOD_FIELD_NUMBER: builtins.int
    QUANTIZE_FIELD_NUMBER: builtins.int
    EXTENSION_FIELD_NUMBER: builtins.int
    HIRES_FIELD_NUMBER: builtins.int
    TILING_FIELD_NUMBER: builtins.int
    height: builtins.int
    width: builtins.int
    @property
    def seed(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    samples: builtins.int
    steps: builtins.int
    @property
    def transform(self) -> global___TransformType: ...
    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StepParameter]: ...
    masked_area_init: global___MaskedAreaInit.ValueType
    """defaults to MASKED_AREA_INIT_ZERO"""
    weight_method: global___WeightMethod.ValueType
    """defaults to TEXT_ENCODER"""
    quantize: builtins.bool
    """defaults to true"""
    @property
    def extension(self) -> global___ExtendedParameters: ...
    @property
    def hires(self) -> global___HiresFixParameters: ...
    tiling: builtins.bool
    def __init__(
        self,
        *,
        height: builtins.int | None = ...,
        width: builtins.int | None = ...,
        seed: collections.abc.Iterable[builtins.int] | None = ...,
        samples: builtins.int | None = ...,
        steps: builtins.int | None = ...,
        transform: global___TransformType | None = ...,
        parameters: collections.abc.Iterable[global___StepParameter] | None = ...,
        masked_area_init: global___MaskedAreaInit.ValueType | None = ...,
        weight_method: global___WeightMethod.ValueType | None = ...,
        quantize: builtins.bool | None = ...,
        extension: global___ExtendedParameters | None = ...,
        hires: global___HiresFixParameters | None = ...,
        tiling: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_extension", b"_extension", "_height", b"_height", "_hires", b"_hires", "_masked_area_init", b"_masked_area_init", "_quantize", b"_quantize", "_samples", b"_samples", "_steps", b"_steps", "_tiling", b"_tiling", "_transform", b"_transform", "_weight_method", b"_weight_method", "_width", b"_width", "extension", b"extension", "height", b"height", "hires", b"hires", "masked_area_init", b"masked_area_init", "quantize", b"quantize", "samples", b"samples", "steps", b"steps", "tiling", b"tiling", "transform", b"transform", "weight_method", b"weight_method", "width", b"width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_extension", b"_extension", "_height", b"_height", "_hires", b"_hires", "_masked_area_init", b"_masked_area_init", "_quantize", b"_quantize", "_samples", b"_samples", "_steps", b"_steps", "_tiling", b"_tiling", "_transform", b"_transform", "_weight_method", b"_weight_method", "_width", b"_width", "extension", b"extension", "height", b"height", "hires", b"hires", "masked_area_init", b"masked_area_init", "parameters", b"parameters", "quantize", b"quantize", "samples", b"samples", "seed", b"seed", "steps", b"steps", "tiling", b"tiling", "transform", b"transform", "weight_method", b"weight_method", "width", b"width"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_extension", b"_extension"]) -> typing_extensions.Literal["extension"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_height", b"_height"]) -> typing_extensions.Literal["height"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hires", b"_hires"]) -> typing_extensions.Literal["hires"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_masked_area_init", b"_masked_area_init"]) -> typing_extensions.Literal["masked_area_init"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_quantize", b"_quantize"]) -> typing_extensions.Literal["quantize"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_samples", b"_samples"]) -> typing_extensions.Literal["samples"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_steps", b"_steps"]) -> typing_extensions.Literal["steps"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tiling", b"_tiling"]) -> typing_extensions.Literal["tiling"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_transform", b"_transform"]) -> typing_extensions.Literal["transform"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weight_method", b"_weight_method"]) -> typing_extensions.Literal["weight_method"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_width", b"_width"]) -> typing_extensions.Literal["width"] | None: ...

global___ImageParameters = ImageParameters

@typing_extensions.final
class ClassifierConcept(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONCEPT_FIELD_NUMBER: builtins.int
    THRESHOLD_FIELD_NUMBER: builtins.int
    concept: builtins.str
    threshold: builtins.float
    def __init__(
        self,
        *,
        concept: builtins.str = ...,
        threshold: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_threshold", b"_threshold", "threshold", b"threshold"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_threshold", b"_threshold", "concept", b"concept", "threshold", b"threshold"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_threshold", b"_threshold"]) -> typing_extensions.Literal["threshold"] | None: ...

global___ClassifierConcept = ClassifierConcept

@typing_extensions.final
class ClassifierCategory(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CONCEPTS_FIELD_NUMBER: builtins.int
    ADJUSTMENT_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    CLASSIFIER_MODE_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def concepts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassifierConcept]: ...
    adjustment: builtins.float
    action: global___Action.ValueType
    classifier_mode: global___ClassifierMode.ValueType
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        concepts: collections.abc.Iterable[global___ClassifierConcept] | None = ...,
        adjustment: builtins.float | None = ...,
        action: global___Action.ValueType | None = ...,
        classifier_mode: global___ClassifierMode.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action", b"_action", "_adjustment", b"_adjustment", "_classifier_mode", b"_classifier_mode", "action", b"action", "adjustment", b"adjustment", "classifier_mode", b"classifier_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action", b"_action", "_adjustment", b"_adjustment", "_classifier_mode", b"_classifier_mode", "action", b"action", "adjustment", b"adjustment", "classifier_mode", b"classifier_mode", "concepts", b"concepts", "name", b"name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action", b"_action"]) -> typing_extensions.Literal["action"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_adjustment", b"_adjustment"]) -> typing_extensions.Literal["adjustment"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_classifier_mode", b"_classifier_mode"]) -> typing_extensions.Literal["classifier_mode"] | None: ...

global___ClassifierCategory = ClassifierCategory

@typing_extensions.final
class ClassifierParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CATEGORIES_FIELD_NUMBER: builtins.int
    EXCEEDS_FIELD_NUMBER: builtins.int
    REALIZED_ACTION_FIELD_NUMBER: builtins.int
    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassifierCategory]: ...
    @property
    def exceeds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassifierCategory]: ...
    realized_action: global___Action.ValueType
    def __init__(
        self,
        *,
        categories: collections.abc.Iterable[global___ClassifierCategory] | None = ...,
        exceeds: collections.abc.Iterable[global___ClassifierCategory] | None = ...,
        realized_action: global___Action.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_realized_action", b"_realized_action", "realized_action", b"realized_action"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_realized_action", b"_realized_action", "categories", b"categories", "exceeds", b"exceeds", "realized_action", b"realized_action"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_realized_action", b"_realized_action"]) -> typing_extensions.Literal["realized_action"] | None: ...

global___ClassifierParameters = ClassifierParameters

@typing_extensions.final
class AssetParameters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTION_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    USE_FIELD_NUMBER: builtins.int
    action: global___AssetAction.ValueType
    project_id: builtins.str
    use: global___AssetUse.ValueType
    def __init__(
        self,
        *,
        action: global___AssetAction.ValueType = ...,
        project_id: builtins.str = ...,
        use: global___AssetUse.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "project_id", b"project_id", "use", b"use"]) -> None: ...

global___AssetParameters = AssetParameters

@typing_extensions.final
class AnswerMeta(google.protobuf.message.Message):
    """AnswerMeta is a set of metadata about an answer, usually the operating
    environment.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GPU_ID_FIELD_NUMBER: builtins.int
    CPU_ID_FIELD_NUMBER: builtins.int
    NODE_ID_FIELD_NUMBER: builtins.int
    ENGINE_ID_FIELD_NUMBER: builtins.int
    gpu_id: builtins.str
    cpu_id: builtins.str
    node_id: builtins.str
    engine_id: builtins.str
    def __init__(
        self,
        *,
        gpu_id: builtins.str | None = ...,
        cpu_id: builtins.str | None = ...,
        node_id: builtins.str | None = ...,
        engine_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cpu_id", b"_cpu_id", "_engine_id", b"_engine_id", "_gpu_id", b"_gpu_id", "_node_id", b"_node_id", "cpu_id", b"cpu_id", "engine_id", b"engine_id", "gpu_id", b"gpu_id", "node_id", b"node_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cpu_id", b"_cpu_id", "_engine_id", b"_engine_id", "_gpu_id", b"_gpu_id", "_node_id", b"_node_id", "cpu_id", b"cpu_id", "engine_id", b"engine_id", "gpu_id", b"gpu_id", "node_id", b"node_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_id", b"_cpu_id"]) -> typing_extensions.Literal["cpu_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_engine_id", b"_engine_id"]) -> typing_extensions.Literal["engine_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_id", b"_gpu_id"]) -> typing_extensions.Literal["gpu_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_id", b"_node_id"]) -> typing_extensions.Literal["node_id"] | None: ...

global___AnswerMeta = AnswerMeta

@typing_extensions.final
class Answer(google.protobuf.message.Message):
    """An Answer is a response to a Request. It is a set of Artifacts, which can be
    of any type and forwarded to the client or the next stage.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANSWER_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RECEIVED_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    ARTIFACTS_FIELD_NUMBER: builtins.int
    answer_id: builtins.str
    request_id: builtins.str
    received: builtins.int
    created: builtins.int
    @property
    def meta(self) -> global___AnswerMeta: ...
    @property
    def artifacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Artifact]: ...
    def __init__(
        self,
        *,
        answer_id: builtins.str = ...,
        request_id: builtins.str = ...,
        received: builtins.int = ...,
        created: builtins.int = ...,
        meta: global___AnswerMeta | None = ...,
        artifacts: collections.abc.Iterable[global___Artifact] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_meta", b"_meta", "meta", b"meta"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_meta", b"_meta", "answer_id", b"answer_id", "artifacts", b"artifacts", "created", b"created", "meta", b"meta", "received", b"received", "request_id", b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_meta", b"_meta"]) -> typing_extensions.Literal["meta"] | None: ...

global___Answer = Answer

@typing_extensions.final
class Request(google.protobuf.message.Message):
    """A Request is a set of Artifacts, which can be of any type with model or
    transform parameters. It is sent to the server, which will respond with an
    Answer.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENGINE_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    REQUESTED_TYPE_FIELD_NUMBER: builtins.int
    PROMPT_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    CLASSIFIER_FIELD_NUMBER: builtins.int
    ASSET_FIELD_NUMBER: builtins.int
    CONDITIONER_FIELD_NUMBER: builtins.int
    engine_id: builtins.str
    request_id: builtins.str
    requested_type: global___ArtifactType.ValueType
    @property
    def prompt(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Prompt]: ...
    @property
    def image(self) -> global___ImageParameters: ...
    @property
    def classifier(self) -> global___ClassifierParameters: ...
    @property
    def asset(self) -> global___AssetParameters: ...
    @property
    def conditioner(self) -> global___ConditionerParameters: ...
    def __init__(
        self,
        *,
        engine_id: builtins.str = ...,
        request_id: builtins.str = ...,
        requested_type: global___ArtifactType.ValueType = ...,
        prompt: collections.abc.Iterable[global___Prompt] | None = ...,
        image: global___ImageParameters | None = ...,
        classifier: global___ClassifierParameters | None = ...,
        asset: global___AssetParameters | None = ...,
        conditioner: global___ConditionerParameters | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_conditioner", b"_conditioner", "asset", b"asset", "classifier", b"classifier", "conditioner", b"conditioner", "image", b"image", "params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_conditioner", b"_conditioner", "asset", b"asset", "classifier", b"classifier", "conditioner", b"conditioner", "engine_id", b"engine_id", "image", b"image", "params", b"params", "prompt", b"prompt", "request_id", b"request_id", "requested_type", b"requested_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conditioner", b"_conditioner"]) -> typing_extensions.Literal["conditioner"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["params", b"params"]) -> typing_extensions.Literal["image", "classifier", "asset"] | None: ...

global___Request = Request

@typing_extensions.final
class OnStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def reason(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___FinishReason.ValueType]: ...
    target: builtins.str
    @property
    def action(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___StageAction.ValueType]: ...
    def __init__(
        self,
        *,
        reason: collections.abc.Iterable[global___FinishReason.ValueType] | None = ...,
        target: builtins.str | None = ...,
        action: collections.abc.Iterable[global___StageAction.ValueType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_target", b"_target", "target", b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_target", b"_target", "action", b"action", "reason", b"reason", "target", b"target"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target", b"_target"]) -> typing_extensions.Literal["target"] | None: ...

global___OnStatus = OnStatus

@typing_extensions.final
class Stage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    ON_STATUS_FIELD_NUMBER: builtins.int
    id: builtins.str
    @property
    def request(self) -> global___Request: ...
    @property
    def on_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OnStatus]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        request: global___Request | None = ...,
        on_status: collections.abc.Iterable[global___OnStatus] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request", b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "on_status", b"on_status", "request", b"request"]) -> None: ...

global___Stage = Stage

@typing_extensions.final
class ChainRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    STAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    @property
    def stage(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Stage]: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        stage: collections.abc.Iterable[global___Stage] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id", b"request_id", "stage", b"stage"]) -> None: ...

global___ChainRequest = ChainRequest

@typing_extensions.final
class AsyncStatus(google.protobuf.message.Message):
    """The status of an async job. 
    Mirrors google.rpc.Status but avoids needing to include that file in the repo.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: builtins.int
    """The status code, which should be an enum value of google.rpc.Code"""
    message: builtins.str
    """Any message"""
    def __init__(
        self,
        *,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code", b"code", "message", b"message"]) -> None: ...

global___AsyncStatus = AsyncStatus

@typing_extensions.final
class AsyncAnswer(google.protobuf.message.Message):
    """A potentially partial answer to an AsyncGenerate request, returned by AsyncResult."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANSWER_FIELD_NUMBER: builtins.int
    COMPLETE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def answer(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Answer]:
        """Any completed Answers that have not been returned by a previous call to AsyncResult."""
    complete: builtins.bool
    """Is this AsyncGenerate request complete? 
    (Once true, any further requests will give an error).
    """
    @property
    def status(self) -> global___AsyncStatus:
        """Final status. Only set when complete == True."""
    def __init__(
        self,
        *,
        answer: collections.abc.Iterable[global___Answer] | None = ...,
        complete: builtins.bool = ...,
        status: global___AsyncStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "complete", b"complete", "status", b"status"]) -> None: ...

global___AsyncAnswer = AsyncAnswer

@typing_extensions.final
class AsyncHandle(google.protobuf.message.Message):
    """A handle to refer to a AsyncGenerate request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    ASYNC_HANDLE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    """The request_id for the original Request."""
    async_handle: builtins.str
    """The opaque handle needed to refer to the same AsyncGenerate request."""
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        async_handle: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["async_handle", b"async_handle", "request_id", b"request_id"]) -> None: ...

global___AsyncHandle = AsyncHandle

@typing_extensions.final
class AsyncCancelAnswer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___AsyncCancelAnswer = AsyncCancelAnswer
